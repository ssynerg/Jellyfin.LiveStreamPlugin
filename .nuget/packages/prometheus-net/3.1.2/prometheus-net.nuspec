<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd">
  <metadata minClientVersion="2.8">
    <id>prometheus-net</id>
    <version>3.1.2</version>
    <authors>andrasm,qed-,lakario,sandersaares</authors>
    <owners>andrasm,qed-,lakario,sandersaares</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <licenseUrl>https://raw.githubusercontent.com/prometheus-net/prometheus-net/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/prometheus-net/prometheus-net</projectUrl>
    <description>.NET metrics exporter for the Prometheus monitoring and alerting system</description>
    <releaseNotes>* 3.1.2
- Fix defect where Histogram batch observations only incremented sum by one value, instead of entire batch. #147
* 3.1.1
- Added missing UTF-8 charset to Content-Type header, so non-ASCII characters are interpreted correctly by browsers.
* 3.1.0
- Added ICounter.NewTimer() (adds the value to the counter)
- Eliminated some needless allocations when trying to register a metric that is already registered. #134
- Added IHistogram.Count and IHistogram.Sum to expose aspects of collected data for inspection.
- Added Collector.GetAllLabelValues() to expose the list of child metrics by all their known label values.
- Metric export is now asynchronous internally to be compatible with ASP.NET Core 3.0 default configuration.
- Added CollectorRegistry.CollectAndExportAsTextAsync() to support metric data export via arbitrary custom endpoints.
* 3.0.3
- Now backward compatible with ASP.NET Core 2.1 (was 2.2+)
* 3.0.2
- Fix defect where histogram sum failed to increment.
* 3.0.1
- Fix ObjectDisposedException in MetricPusher.
* 3.0.0
- Added HTTP request metrics for ASP.NET Core.
- Somewhat more realistic examples in readme.
- Metrics exporter is now significantly more CPU and memory-efficient.
- Added Observe(value, count) to histogram metric, enabling multiple observations with the same value to be counted.
- Added CountExceptions() and MeasureInProgress() helper extensions.
- Adjusted API to better conform to Prometheus client library guidelines in terms of default values.
- Breaking change: assemblies are now strong-named.
- Breaking change: removed "windows" from built-in metric names as they are not Windows-specific.
- Breaking change: removed support for protobuf export format (it is no longer used by Prometheus).
- Breaking change: API surface cleaned up, removed some legacy methods, made many internal types actually internal.
- Breaking change: "on demand collectors" concept replaced with simpler "before collect callbacks". Works the same, just less code needed to use it and fewer possible error conditions.
- Breaking change: removed support for "custom collectors", as this was a very special use case that did not benefit at all from the main functionality of the library. Just generate a Prometheus exporter output document yourself if you need to export arbitrary data.
* 2.1.3
- Fixed wrong case used for metric type in the export data format. Should always be lowercase. #96
* 2.1.2
- Fixed potential conflict when using pushgateway and also other exporter libraries (see #89)
* 2.1.1
- Various minor fixes (see issues on GitHub for details).
* 2.1.0
- Add MetricOptions and subclasses for more extensible API (old API surface remains available)
- Add SuppressInitialValue to metric configuration (ref https://www.robustperception.io/existential-issues-with-metrics/)
- Add .WithLabels() as alternative to .Labels() for fewer annoying Intellisense conflicts.
* 2.0.0
- Targeting .NET Standard 2.0 as minimum version (.NET Framework 4.6.1, .NET Core 2.0 and Mono 5.4)
- Added ASP.NET Core middlware
- Added possibility to signal a failed scrape from on-demand collectors
- Removed dependency on Reactive Extensions
- Minor breaking changes to API
- Performance improvements for hot-path code
- Removed mostly obsolete PerfCounterCollector class
- Fixed NuGet package contents to remove assemblies from dependencies
- Various minor fixes (see issues on GitHub for details)
* 1.3.4
- Added support for .NET 4.5 using System.Reactive 3.1.1.
- .NET 4.0 support continues to target Rx 2.5
* 1.2.4:
- Fixed MetricPusher not flushing metrics when stopped
* 1.2.3:
- Fixed label values escaping for ASCII formatter
* 1.2.2:
- PushGateway support
- Various internal improvements (replaced locks with Interlocked operations)    
* 1.1.4:
- Fixed some metrics not updating, added process ID metric
- Replaced lock statements in Counter and Gauge with CAS
* 1.1.3:
- optionally use https in MetricServer
* 1.1.2:
- using UTF-8 in text formatter
- catching exceptions in MetricServer http loop
* 1.1.1:
- disposing of MetricServer loop on Stop()
* 1.1.0:
- Renamed some metric names to be in-line with prometheus guidelines (breaking change as far as the exported metrics are concerned)
* 1.0.0:
- Add CPU, num handles, start time, num threads metrics to dot net stats collector
- Made DotNetStatsCollector default (previously it was PerfCounterCollector)
* 0.0.11:
- Summary metric ported from go
* 0.0.10:
- Fix header writing order
* 0.0.9:
- Generalise scraping so it can be called externally without using the embedded http handler
* 0.0.8:
- Introduced interfaces for all the metrics to make unlabelled collectors and their children polymorph
* 0.0.7:
- Added the notion of OnDemandCollectors + a DotNetStatsCollector to avoid having to use .net perf counters
* 0.0.6:
- Do not create unlabelled metric if label names are specified
* 0.0.5:
- Allow specifying hostname in URL
- Fix null ref exception if 'Accept' header is not specified
* 0.0.3 - initial version</releaseNotes>
    <copyright>Copyright Â© 2015 andrasm</copyright>
    <tags>metrics prometheus</tags>
  </metadata>
</package>
<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>IDisposableAnalyzers</id>
    <version>4.0.7</version>
    <authors>Johan Larsson, milleniumbug</authors>
    <developmentDependency>true</developmentDependency>
    <license type="expression">MIT</license>
    <licenseUrl>https://licenses.nuget.org/MIT</licenseUrl>
    <projectUrl>https://github.com/DotNetAnalyzers/IDisposableAnalyzers</projectUrl>
    <description>Analyzers and fixes for IDisposable.</description>
    <releaseNotes>4.0.7
      BUGFIX: Handle target typed new
      4.0.6
      BUGFIX: Handle ref struct
      BUGFIX: Handle target typed new
      4.0.5
      BUGFIX: Handle ValueTask
      BUGFIX: awaited in expression
      4.0.3
      BUGFIX: Handle recursive builder
      4.0.2
      BUGFIX: IDISP007 when disposing static member in static context
      4.0.1
      BUGFIX: IDISP007 false warning when using Rx
      BUGFIX: IDISP016 false warning when foreach
      BUGFIX: Handle leaveOpen when AsyncDisposable
      BUGIX: Handle top level statements.
      4.0.0
      BREAKING: For VS2022+ now.
      BUGFIX: AD0001 -&gt; Could not load file or assembly
      3.4.15
      BUGFIX: IDISP005 with ServiceDescriptor
      BUGFIX: IDISP004 when DisposeWith
      3.4.14
      BUGFIX: IDISP005 should not warn in Assert.Throws.
      BUGFIX: Handle function pointer.
      3.4.13
      BUGFIX: Specialcase Gu.Reactive extension methods.
      3.4.12
      BUGFIX: Handle more cases when chained extension methods.
      BUGFIX: When leaveOpen has default value
      3.4.11
      BUGFIX IDISP023 handle trivial and.
      BUGFIX IDISP023 when chained constructors
      BUGFIX IDISP001 when if statement.
      BUGFIX IDISP004 when chained leave open.
      3.4.10
      BUGFIX: Handle using in loop
      3.4.9
      BUGFIX: IDISP023 Allow touching static reference types.
      BUGFIX: AD0001: Analyzer 'IDisposableAnalyzers.LocalDeclarationAnalyzer
      3.4.8
      BUGFIX: Don't use Roslyn's SymbolEqualityComparer
      3.4.7
      Can't repro issues, thinking maybe the 3.4.6 release used wrong binaries.
      3.4.6
      BUGFIX: IDSP007 when using declaration.
      BUGFIX: Figure out chained calls.
      3.4.5
      FEATURE: Handle switch expression.
      BUGFIX: Figure out await in more places.
      BUGFIX: Tweak assumptions about binary symbols.
      BUGFIX: Handle Interlocked.Exchange
      3.4.4
      FEATURE: Handle some common uses of reflection.
      3.4.3
      Special case ConnectionFactory.CreateConnection
      BUGFIX: Handle chained calls
      BUGFIX: Cast and dispose correctly.
      3.4.2
      Handle some regressions in Roslyn 3.7
      3.4.1
      Publish with binaries.
      3.4.0
      FEATURE: Handle DisposableMixins.DisposeWith
      BUGFIX: IDISP025 when abstract dispose method.
      BUGFIX: IDISP006 when explicit implementation.
      3.3.9
      BUGFIX: Special case IHostedService more
      3.3.8
      BUGFIX: Handle nullable
      3.3.7
      BUGFIX: Handle conditional access (regression)
      3.3.6
      Handle ValueTask
      Handle HostingAbstractionsHostExtensions
      BUGFIX: IDISP010 when public override void Dispose()
      3.3.5
      Handle IHostedService
      3.3.4
      BUGFIX: IDISP004 when yield return.
      BUGFIX: IDISP004 handle System.Net.Mail.Attachment
      BUGFIX: IDISP003 handle null forgiving operator.
      3.3.3
      BUGFIX: Infinite recursion killing VS.
      3.3.2
      BUGFIX: IDISP023 don't warn on attribute.
      3.3.1
      BUGFIX: IDISP017: when DisposeAsync()
      BUGFIX: IDISP004 when pooled
      3.3.0
      FEAUTURE: Initial support for AsyncDisposable
      3.2.0
      BUGFIX: Handle extension methods in binary references better.</releaseNotes>
    <tags>IDisposable Roslyn Diagnostic Analyzer DotnetAnalyzers</tags>
    <repository url="https://github.com/DotNetAnalyzers/IDisposableAnalyzers" />
  </metadata>
</package>
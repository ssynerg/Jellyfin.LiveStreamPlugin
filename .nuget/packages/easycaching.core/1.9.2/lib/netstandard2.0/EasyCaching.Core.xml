<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyCaching.Core</name>
    </assembly>
    <members>
        <member name="T:EasyCaching.Core.Bus.EasyCachingMessage">
            <summary>
            EasyCaching message.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Bus.EasyCachingMessage.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:EasyCaching.Core.Bus.EasyCachingMessage.CacheKeys">
            <summary>
            Gets or sets the cache keys.
            </summary>
            <value>The cache keys.</value>
        </member>
        <member name="P:EasyCaching.Core.Bus.EasyCachingMessage.IsPrefix">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EasyCaching.Core.Bus.EasyCachingMessage"/> is prefix.
            </summary>
            <value><c>true</c> if is prefix; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Bus.EasyCachingMessage.IsPattern">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EasyCaching.Core.Bus.EasyCachingMessage"/> is pattern.
            </summary>
            <value><c>true</c> if is pattern; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:EasyCaching.Core.Bus.IEasyCachingBus">
            <summary>
            Easycaching bus.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Bus.IEasyCachingBus.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:EasyCaching.Core.Bus.IEasyCachingPublisher">
            <summary>
            EasyCaching publisher.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Bus.IEasyCachingPublisher.Publish(System.String,EasyCaching.Core.Bus.EasyCachingMessage)">
            <summary>
            Publish the specified topic and message.
            </summary>
            <param name="topic">Topic.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:EasyCaching.Core.Bus.IEasyCachingPublisher.PublishAsync(System.String,EasyCaching.Core.Bus.EasyCachingMessage,System.Threading.CancellationToken)">
            <summary>
            Publishs the specified topic and message.
            </summary>
            <returns>The async.</returns>
            <param name="topic">Topic.</param>
            <param name="message">Message.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:EasyCaching.Core.Bus.IEasyCachingSubscriber">
            <summary>
            EasyCaching subscriber.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Bus.IEasyCachingSubscriber.Subscribe(System.String,System.Action{EasyCaching.Core.Bus.EasyCachingMessage},System.Action)">
            <summary>
            Subscribe the specified topic and action.
            </summary>
            <param name="topic">Topic.</param>
            <param name="action">Action.</param>
            <param name="reconnectAction"> Reconnect Action.</param>
        </member>
        <member name="M:EasyCaching.Core.Bus.IEasyCachingSubscriber.SubscribeAsync(System.String,System.Action{EasyCaching.Core.Bus.EasyCachingMessage},System.Action,System.Threading.CancellationToken)">
            <summary>
            Subscribe the specified topic and action async.
            </summary>
            <param name="topic">Topic.</param>
            <param name="action">Action.</param>
            <param name="reconnectAction"> Reconnect Action.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:EasyCaching.Core.Bus.NullEasyCachingBus">
            <summary>
            Null easy caching bus.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.Bus.NullEasyCachingBus.Instance">
            <summary>
            The instance.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Bus.NullEasyCachingBus.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:EasyCaching.Core.Bus.NullEasyCachingBus"/> object.
            </summary>
            <remarks>Call <see cref="M:EasyCaching.Core.Bus.NullEasyCachingBus.Dispose"/> when you are finished using the
            <see cref="T:EasyCaching.Core.Bus.NullEasyCachingBus"/>. The <see cref="M:EasyCaching.Core.Bus.NullEasyCachingBus.Dispose"/> method leaves the
            <see cref="T:EasyCaching.Core.Bus.NullEasyCachingBus"/> in an unusable state. After calling
            <see cref="M:EasyCaching.Core.Bus.NullEasyCachingBus.Dispose"/>, you must release all references to the
            <see cref="T:EasyCaching.Core.Bus.NullEasyCachingBus"/> so the garbage collector can reclaim the memory that
            the <see cref="T:EasyCaching.Core.Bus.NullEasyCachingBus"/> was occupying.</remarks>
        </member>
        <member name="M:EasyCaching.Core.Bus.NullEasyCachingBus.Publish(System.String,EasyCaching.Core.Bus.EasyCachingMessage)">
            <summary>
            Publish the specified topic and message.
            </summary>
            <param name="topic">Topic.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:EasyCaching.Core.Bus.NullEasyCachingBus.PublishAsync(System.String,EasyCaching.Core.Bus.EasyCachingMessage,System.Threading.CancellationToken)">
            <summary>
            Publish the specified topic and message async.
            </summary>
            <returns>The async.</returns>
            <param name="topic">Topic.</param>
            <param name="message">Message.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:EasyCaching.Core.Bus.NullEasyCachingBus.Subscribe(System.String,System.Action{EasyCaching.Core.Bus.EasyCachingMessage},System.Action)">
            <summary>
            Subscribe the specified topic and action.
            </summary>
            <param name="topic">Topic.</param>
            <param name="action">Action.</param>
            <param name="reconnectAction">Reconnect Action.</param>
        </member>
        <member name="M:EasyCaching.Core.Bus.NullEasyCachingBus.SubscribeAsync(System.String,System.Action{EasyCaching.Core.Bus.EasyCachingMessage},System.Action,System.Threading.CancellationToken)">
            <summary>
            Subscribe the specified topic and action async.
            </summary>
            <param name="topic">Topic.</param>
            <param name="action">Action.</param>
            <param name="reconnectAction">Reconnect Action.</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="T:EasyCaching.Core.Configurations.BaseProviderOptions">
            <summary>
            Base provider options.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.MaxRdSecond">
            <summary>
            Gets or sets the max random second.
            </summary>
            <remarks>
            If this value greater then zero, the seted cache items' expiration will add a random second
            This is mainly for preventing Cache Crash
            </remarks>
            <value>The max random second.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.EnableLogging">
            <summary>
            Gets or sets a value indicating whether enable logging.
            </summary>
            <value><c>true</c> if enable logging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.SleepMs">
            <summary>
            Gets or sets the sleep ms.
            when mutex key alive, it will sleep some time, default is 300
            </summary>
            <value>The sleep ms.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.LockMs">
            <summary>
            Gets or sets the lock ms.
            mutex key's alive time(ms), default is 5000
            </summary>
            <value>The lock ms.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.SerializerName">
            <summary>
            Gets or sets the serializer name that should be use in this provider.
            Mainly for distributed cache
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseProviderOptions.CacheNulls">
            <summary>
            Get or sets whether null values should be cached, default is false.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.HostName">
            <summary>
            The host to connect to.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.Password">
            <summary>
            Password to use when authenticating to the server.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.UserName">
            <summary>
            Username to use when authenticating to the server.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.VirtualHost">
            <summary>
            Virtual host to access during this connection.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.TopicExchangeName">
            <summary>
            Topic exchange name when declare a topic exchange.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.RequestedConnectionTimeout">
            <summary>
            Timeout setting for connection attempts (in milliseconds).
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.SocketReadTimeout">
            <summary>
            Timeout setting for socket read operations (in milliseconds).
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.SocketWriteTimeout">
            <summary>
            Timeout setting for socket write operations (in milliseconds).
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.Port">
            <summary>
            The port to connect on.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.QueueMessageExpires">
            <summary>
            Gets or sets queue message automatic deletion time (in milliseconds). Default 864000000 ms (10 days).
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRabbitMQOptions.ClientProvidedName">
            <summary>
            Gets or sets the client-provided name for the rabbit connection. Default null (handled by rabbit client)
            </summary>
        </member>
        <member name="T:EasyCaching.Core.Configurations.BaseRedisOptions">
            <summary>
            Base redis options.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.Username">
            <summary>
            Gets or sets the username to be used to connect to the Redis server.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.Password">
            <summary>
            Gets or sets the password to be used to connect to the Redis server.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.IsSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL encryption.
            </summary>
            <value>
              <c>true</c> if this instance is SSL; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.SslHost">
            <summary>
            Gets or sets the SSL Host.
            If set, it will enforce this particular host on the server's certificate.
            </summary>
            <value>
            The SSL host.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.ConnectionTimeout">
            <summary>
            Gets or sets the timeout for any connect operations.
            </summary>
            <value>
            The connection timeout.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.Endpoints">
            <summary>
            Gets the list of endpoints to be used to connect to the Redis server.
            </summary>
            <value>
            The endpoints.
            </value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.AllowAdmin">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EasyCaching.Core.Internal.BaseRedisOptions"/>
            allow admin.
            </summary>
            <value><c>true</c> if allow admin; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.Configuration">
            <summary>
            Gets or sets the string configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.BaseRedisOptions.AbortOnConnectFail">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EasyCaching.Core.Internal.BaseRedisOptions"/>
            abort on connect fail.
            </summary>
            <value><c>true</c> if abort on connect fail; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.EasyCachingInterceptorOptions.CacheProviderName">
            <summary>
            The cache instance name used by the interceptor
            </summary>
        </member>
        <member name="T:EasyCaching.Core.Configurations.EasyCachingOptions">
            <summary>
            EasyCaching options.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Configurations.EasyCachingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EasyCaching.Core.EasyCachingOptions"/> class.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.EasyCachingOptions.Extensions">
            <summary>
            Gets the extensions.
            </summary>
            <value>The extensions.</value>
        </member>
        <member name="M:EasyCaching.Core.Configurations.EasyCachingOptions.RegisterExtension(EasyCaching.Core.Configurations.IEasyCachingOptionsExtension)">
            <summary>
            Registers the extension.
            </summary>
            <param name="extension">Extension.</param>
        </member>
        <member name="T:EasyCaching.Core.Configurations.IEasyCachingOptionsExtension">
            <summary>
            EasyCaching options extension.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Configurations.IEasyCachingOptionsExtension.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the services.
            </summary>
            <param name="services">Services.</param>
        </member>
        <member name="T:EasyCaching.Core.Configurations.ServerEndPoint">
            <summary>
            Defines an endpoint.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Configurations.ServerEndPoint.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EasyCaching.Core.Configurations.ServerEndPoint"/> class.
            </summary>
            <param name="host">Host.</param>
            <param name="port">Port.</param>
        </member>
        <member name="M:EasyCaching.Core.Configurations.ServerEndPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EasyCaching.Core.Configurations.ServerEndPoint"/> class.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Configurations.ServerEndPoint.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:EasyCaching.Core.Configurations.ServerEndPoint.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="T:EasyCaching.Core.Diagnostics.EasyCachingDiagnosticListenerExtensions">
            <summary>
            Extension methods on the DiagnosticListener class to log EasyCaching
            </summary>
        </member>
        <member name="M:EasyCaching.Core.DistributedLock.DistributedLockOptionsExtension`1.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the services.
            </summary>
            <param name="services">Services.</param>
        </member>
        <member name="T:EasyCaching.Core.DistributedLock.IDistributedLock">
            <summary>A distributed lock</summary>
        </member>
        <member name="M:EasyCaching.Core.DistributedLock.IDistributedLock.Lock(System.Int32,System.Threading.CancellationToken)">
            <summary>Lock the resource</summary>
            <param name="millisecondsTimeout">The max wait timeout for the lock</param>
            <param name="cancellationToken">A cancellation token to observe while waiting for the operation to complete.</param>
            <returns>The locked resource, if succeed, else return null</returns>
        </member>
        <member name="M:EasyCaching.Core.DistributedLock.IDistributedLock.LockAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>Lock the resource</summary>
            <param name="millisecondsTimeout">The max wait timeout for the lock</param>
            <param name="cancellationToken">A cancellation token to observe while waiting for the task to complete.</param>
            <returns>The locked resource, if succeed, else return null.</returns>
        </member>
        <member name="M:EasyCaching.Core.DistributedLock.IDistributedLock.Release">
            <summary>Release the resource</summary>
        </member>
        <member name="M:EasyCaching.Core.DistributedLock.IDistributedLock.ReleaseAsync">
            <summary>Release the resource</summary>
        </member>
        <member name="T:EasyCaching.Core.IEasyCachingProvider">
            <summary>
            EasyCaching provider.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.IsDistributedCache">
            <summary>
            Gets a value indicating whether this <see cref="T:EasyCaching.Core.IEasyCachingProvider"/> is distributed cache.
            </summary>
            <value><c>true</c> if is distributed cache; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.UseLock">
            <summary>
            Gets a value indicating whether this <see cref="T:EasyCaching.Core.IEasyCachingProvider"/> is use lock.
            </summary>
            <value><c>true</c> if is use lock; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetAllKeysByPrefix(System.String)">
            <summary>
            Gets all keys by prefix.
            </summary>
            <param name="prefix">Prefix.</param>
            <returns>The all keys by prefix.</returns>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetAllKeysByPrefixAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all keys by prefix async.
            </summary>
            <param name="prefix">Prefix.</param>
            <param name="cancellationToken">CancellationToken</param>
            <returns>The all keys by prefix async.</returns>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetAll``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all.
            </summary>
            <returns>The all.</returns>
            <param name="cacheKeys">Cache keys.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetAllAsync``1(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets all async.
            </summary>
            <returns>The all async.</returns>
            <param name="cacheKeys">Cache keys.</param>
            <param name="cancellationToken">CancellationToken</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetByPrefix``1(System.String)">
            <summary>
            Gets the by prefix.
            </summary>
            <returns>The by prefix.</returns>
            <param name="prefix">Prefix.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetByPrefixAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the by prefix async.
            </summary>
            <returns>The by prefix async.</returns>
            <param name="prefix">Prefix.</param>
            <param name="cancellationToken">CancellationToken</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetCount(System.String)">
            <summary>
            Gets the count.
            </summary>
            <returns>The count.</returns>
            <param name="prefix">Prefix.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the count async.
            </summary>
            <returns>The count.</returns>
            <param name="prefix">Prefix.</param>
            <param name="cancellationToken">CancellationToken</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.Flush">
            <summary>
            Flush All Cached Item.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Flush All Cached Item async.
            </summary>
            <returns>The async.</returns>
            <param name="cancellationToken">CancellationToken</param>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.MaxRdSecond">
            <summary>
            Gets the max rd second.
            </summary>
            <value>The max random second.</value>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.CachingProviderType">
            <summary>
            Gets the type of the caching provider.
            </summary>
            <value>The type of the caching provider.</value>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.CacheStats">
            <summary>
            Gets or sets the cache stats.
            </summary>
            <value>The get stats.</value>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetExpiration(System.String)">
            <summary>
            Gets the exporation of specify cachekey.
            </summary>
            <param name="cacheKey">Cache key.</param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetExpirationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the exporation of specify cachekey async.
            </summary>
            <param name="cacheKey"></param>
            <param name="cancellationToken">CancellationToken</param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProvider.GetProviderInfo">
            <summary>
            Gets the information of provider.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProvider.Database">
            <summary>
            Get or sets the provider's database
            </summary>
        </member>
        <member name="P:EasyCaching.Core.IEasyCachingProviderBase.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            Set the specified cacheKey, cacheValue and expiration.
            </summary>
            <param name="cacheKey">Cache key.</param>
            <param name="cacheValue">Cache value.</param>
            <param name="expiration">Expiration.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.SetAsync``1(System.String,``0,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Sets the specified cacheKey, cacheValue and expiration async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cacheValue">Cache value.</param>
            <param name="expiration">Expiration.</param>
            <param name="cancellationToken"></param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.Get``1(System.String)">
            <summary>
            Get the specified cacheKey.
            </summary>
            <returns>The get.</returns>
            <param name="cacheKey">Cache key.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified cacheKey async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cancellationToken"></param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.Remove(System.String)">
            <summary>
            Remove the specified cacheKey.
            </summary>
            <param name="cacheKey">Cache key.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the specified cacheKey async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Exists the specified cacheKey async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.Exists(System.String)">
            <summary>
            Exists the specified cacheKey.
            </summary>
            <returns>The exists.</returns>
            <param name="cacheKey">Cache key.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.TrySet``1(System.String,``0,System.TimeSpan)">
            <summary>
            Tries the set.
            </summary>
            <returns><c>true</c>, if set was tryed, <c>false</c> otherwise.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cacheValue">Cache value.</param>
            <param name="expiration">Expiration.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.TrySetAsync``1(System.String,``0,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Tries the set async.
            </summary>
            <returns>The set async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="cacheValue">Cache value.</param>
            <param name="expiration">Expiration.</param>
            <param name="cancellationToken"></param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.SetAll``1(System.Collections.Generic.IDictionary{System.String,``0},System.TimeSpan)">
            <summary>
            Sets all.
            </summary>
            <param name="value">Value.</param>
            <param name="expiration">Expiration.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.SetAllAsync``1(System.Collections.Generic.IDictionary{System.String,``0},System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Sets all async.
            </summary>
            <returns>The all async.</returns>
            <param name="value">Value.</param>
            <param name="expiration">Expiration.</param>
            <param name="cancellationToken"></param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes all.
            </summary>
            <param name="cacheKeys">Cache keys.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Removes all async.
            </summary>
            <returns>The all async.</returns>
            <param name="cacheKeys">Cache keys.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.Get``1(System.String,System.Func{``0},System.TimeSpan)">
            <summary>
            Get the specified cacheKey, dataRetriever and expiration.
            </summary>
            <returns>The get.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="dataRetriever">Data retriever.</param>
            <param name="expiration">Expiration.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.GetAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Gets the specified cacheKey, dataRetriever and expiration async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="dataRetriever">Data retriever.</param>
            <param name="expiration">Expiration.</param>
            <param name="cancellationToken"></param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveByPrefix(System.String)">
            <summary>
            Removes cached item by cachekey's prefix.
            </summary>
            <param name="prefix">Prefix of CacheKey.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveByPatternAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes cached items by a cache key pattern async.
            </summary>
            <param name="pattern">Pattern of CacheKeys.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveByPattern(System.String)">
            <summary>
            Removes cached items by a cache key pattern.
            </summary>
            <param name="pattern">Pattern of CacheKeys.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.RemoveByPrefixAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes cached item by cachekey's prefix async.
            </summary>
            <param name="prefix">Prefix of CacheKey.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderBase.GetAsync(System.String,System.Type,System.Threading.CancellationToken)">
            <summary>
            Gets the specified cacheKey async.
            </summary>
            <returns>The async.</returns>
            <param name="cacheKey">Cache key.</param>
            <param name="type">Object Type.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:EasyCaching.Core.IHybridCachingProvider">
            <summary>
            Hybrid caching provider.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.DefaultEasyCachingKeyGenerator">
            <summary>
            Default easycaching key generator.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.EasyCachingAbleAttribute">
            <summary>
            Easycaching able attribute.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingAbleAttribute.Expiration">
            <summary>
            Gets or sets the expiration. The default value is 30 second.
            </summary>
            <value>The expiration.</value>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.EasyCachingEvictAttribute">
            <summary>
            Easycaching evict attribute.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingEvictAttribute.IsAll">
            <summary>
            Gets or sets a value indicating whether evict all cached values by cachekey prefix
            </summary>
            <remarks>
            This need to use with CacheKeyPrefix.
            </remarks>
            <value><c>true</c> if is all; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingEvictAttribute.IsBefore">
            <summary>
            Gets or sets a value indicating whether is before.
            </summary>
            <value><c>true</c> if is before; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.EasyCachingInterceptorAttribute">
            <summary>
            Easycaching interceptor attribute.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingInterceptorAttribute.IsHybridProvider">
            <summary>
            Gets or sets a value indicating whether is hybrid provider.
            </summary>
            <value><c>true</c> if is hybrid provider; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingInterceptorAttribute.CacheKeyPrefix">
            <summary>
            Gets or sets the cache key prefix. 
            </summary>
            <value>The cache key prefix.</value>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingInterceptorAttribute.CacheProviderName">
            <summary>
            Gets or sets the cache provider name. The default value is <seealso cref="P:EasyCaching.Core.Configurations.EasyCachingInterceptorOptions.CacheProviderName"/> 
            </summary>
            <value>The cache key prefix.</value>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingInterceptorAttribute.IsHighAvailability">
            <summary>
             Prevent cache provider errors from affecting business
            </summary>
            <value>The cache key prefix.</value>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.EasyCachingPutAttribute">
            <summary>
            Easycaching put attribute.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.EasyCachingPutAttribute.Expiration">
            <summary>
            Gets or sets the expiration. The default value is 30 second.
            </summary>
            <value>The expiration.</value>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.ICachable">
            <summary>
            Cachable.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Interceptor.ICachable.CacheKey">
            <summary>
            Gets the cache key.
            </summary>
            <value>The cache key.</value>
        </member>
        <member name="T:EasyCaching.Core.Interceptor.IEasyCachingKeyGenerator">
            <summary>
            Easycaching key generator.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Interceptor.IEasyCachingKeyGenerator.GetCacheKey(System.Reflection.MethodInfo,System.Object[],System.String)">
            <summary>
            Gets the cache key.
            </summary>
            <returns>The cache key.</returns>
            <param name="methodInfo">Method info.</param>
            <param name="args">Arguments.</param>
            <param name="prefix">Prefix.</param>
        </member>
        <member name="M:EasyCaching.Core.Interceptor.IEasyCachingKeyGenerator.GetCacheKeyPrefix(System.Reflection.MethodInfo,System.String)">
            <summary>
            Gets the cache key prefix.
            </summary>
            <returns>The cache key prefix.</returns>
            <param name="methodInfo">Method info.</param>
            <param name="prefix">Prefix.</param>
        </member>
        <member name="T:EasyCaching.Core.ArgumentCheck">
            <summary>
            Argument check.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNull(System.Object,System.String)">
            <summary>
            Validates that <paramref name="argument"/> is not null , otherwise throws an exception.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNull(System.Object,System.String,System.Boolean)">
            <summary>
            Validates that <paramref name="argument"/> is not null , otherwise throws an exception.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
            <param name="allowNulls">Allow nulls.</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Validates that <paramref name="argument"/> is not null or white space , otherwise throws an exception.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNegativeOrZero(System.TimeSpan,System.String)">
            <summary>
            Validates that <paramref name="argument"/> is not negative or zero , otherwise throws an exception.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNullAndCountGTZero``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Nots the null and count gt Zero.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
        </member>
        <member name="M:EasyCaching.Core.ArgumentCheck.NotNullAndCountGTZero``1(System.Collections.Generic.IDictionary{System.String,``0},System.String)">
            <summary>
            Nots the null and count gt Zero.
            </summary>
            <param name="argument">Argument.</param>
            <param name="argumentName">Argument name.</param>
        </member>
        <member name="T:EasyCaching.Core.CacheValue`1">
            <summary>
            Cache value.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheValue`1.#ctor(`0,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:EasyCaching.Core.CacheValue`1"/> class.
            </summary>
            <param name="value">Value.</param>
            <param name="hasValue">If set to <c>true</c> has value.</param>
        </member>
        <member name="P:EasyCaching.Core.CacheValue`1.HasValue">
            <summary>
            Gets a value indicating whether this <see cref="T:EasyCaching.Core.CacheValue`1"/> has value.
            </summary>
            <value><c>true</c> if has value; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.CacheValue`1.IsNull">
            <summary>
            Gets a value indicating whether this <see cref="T:EasyCaching.Core.CacheValue`1"/> is null.
            </summary>
            <value><c>true</c> if is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.CacheValue`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:EasyCaching.Core.CacheValue`1.Null">
            <summary>
            Gets the null.
            </summary>
            <value>The null.</value>
        </member>
        <member name="P:EasyCaching.Core.CacheValue`1.NoValue">
            <summary>
            Gets the no value.
            </summary>
            <value>The no value.</value>
        </member>
        <member name="M:EasyCaching.Core.CacheValue`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyCaching.Core.CachingProviderType">
            <summary>
            Caching provider type.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.EasyCachingConstValue">
            <summary>
            EasyCaching const value.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.ConfigSection">
            <summary>
            The config section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.RedisSection">
            <summary>
            The redis section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.CSRedisSection">
            <summary>
            The CSRedis section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.MemcachedSection">
            <summary>
            The memcached section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.SQLiteSection">
            <summary>
            The SQLite section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.InMemorySection">
            <summary>
            The in-memory section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DiskSection">
            <summary>
            The disk section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.HybridSection">
            <summary>
            The hybrid section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.RedisBusSection">
            <summary>
            The redis bus section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.RabbitMQBusSection">
            <summary>
            The rabbitMQ Bus section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.KafkaBusSection">
            <summary>
            The kafka bus section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.ZookeeperBusSection">
            <summary>
            The zookeeper bus section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultInMemoryName">
            <summary>
            The default name of the in-memory.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultRedisName">
            <summary>
            The default name of the redis.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultCSRedisName">
            <summary>
            The default name of the CSRedis.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultMemcachedName">
            <summary>
            The default name of the memcached.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultSQLiteName">
            <summary>
            The default name of the SQLite.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultDiskName">
            <summary>
            The default name of the disk.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultHybridName">
            <summary>
            The default name of the hybrid.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultSerializerName">
            <summary>
            The default name of the serializer.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultLiteDBName">
            <summary>
            The default name of the LiteDB.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.LiteDBSection">
            <summary>
            The LiteDB Bus section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.DefaultFasterKvName">
            <summary>
            The default name of the FasterKv
            </summary>
        </member>
        <member name="F:EasyCaching.Core.EasyCachingConstValue.FasterKvSection">
            <summary>
            The FasterKv section.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.Internal.TypeHelper.SubtractFullNameRegex">
            <summary>
            The subtract full name regex.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.Internal.TypeHelper.BuildTypeName(System.Type)">
            <summary>
            Builds the name of the type.
            </summary>     
            <returns>The type name.</returns>
            <param name="type">Type.</param>
        </member>
        <member name="P:EasyCaching.Core.ProviderInfo.EnableLogging">
            <summary>
            Gets or sets a value indicating whether enable logging.
            </summary>
            <value><c>true</c> if enable logging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EasyCaching.Core.ProviderInfo.SleepMs">
            <summary>
            Gets or sets the sleep ms.
            when mutex key alive, it will sleep some time, default is 300
            </summary>
            <value>The sleep ms.</value>
        </member>
        <member name="P:EasyCaching.Core.ProviderInfo.LockMs">
            <summary>
            Gets or sets the lock ms.
            mutex key's alive time(ms), default is 5000
            </summary>
            <value>The lock ms.</value>
        </member>
        <member name="P:EasyCaching.Core.ProviderInfo.SerializerName">
            <summary>
            Gets or sets the serializer name that should be use in this provider.
            Mainly for distributed cache
            </summary>
        </member>
        <member name="P:EasyCaching.Core.ProviderInfo.CacheNulls">
            <summary>
            Get or sets whether null values should be cached, default is false.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.IRedisCachingProvider">
            <summary>
            Redis caching provider.
            </summary>
            <remarks>
            Contains some features of redis
            </remarks>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyDel(System.String)">
            <summary>
            https://redis.io/commands/del
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyDelAsync(System.String)">
            <summary>
            https://redis.io/commands/del
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyExpire(System.String,System.Int32)">
            <summary>
            https://redis.io/commands/expire
            </summary>
            <param name="cacheKey"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyExpireAsync(System.String,System.Int32)">
            <summary>
            https://redis.io/commands/expire
            </summary>
            <param name="cacheKey"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyPersist(System.String)">
            <summary>
            https://redis.io/commands/persist
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyPersistAsync(System.String)">
            <summary>
            https://redis.io/commands/persist
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyExistsAsync(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
            <param name="cacheKey"></param>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.KeyExists(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
            <param name="cacheKey"></param>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.TTL(System.String)">
            <summary>
            https://redis.io/commands/ttl
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.TTLAsync(System.String)">
            <summary>
            https://redis.io/commands/ttl
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SearchKeys(System.String,System.Nullable{System.Int32})">
            <summary>
            Searchs the keys.
            </summary>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SearchKeysAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Searchs the keys.
            </summary>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.IncrBy(System.String,System.Int64)">
            <summary>
            https://redis.io/commands/incrby
            </summary>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.IncrByAsync(System.String,System.Int64)">
            <summary>
            https://redis.io/commands/incrby
            </summary>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.IncrByFloat(System.String,System.Double)">
            <summary>
            https://redis.io/commands/incrbyfloat
            </summary>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.IncrByFloatAsync(System.String,System.Double)">
            <summary>
            https://redis.io/commands/incrbyfloat
            </summary>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringSet(System.String,System.String,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            https://redis.io/commands/set
            </summary>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <param name="expiration"></param>
            <param name="when">nx,xx,</param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringSetAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            https://redis.io/commands/set
            </summary>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <param name="expiration"></param>
            <param name="when">nx,xx,</param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringGet(System.String)">
            <summary>
            https://redis.io/commands/get
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringGetAsync(System.String)">
            <summary>
            https://redis.io/commands/get
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringLen(System.String)">
            <summary>
            https://redis.io/commands/strlen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringLenAsync(System.String)">
            <summary>
            https://redis.io/commands/strlen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringSetRange(System.String,System.Int64,System.String)">
            <summary>
            https://redis.io/commands/setrange
            </summary>
            <param name="cacheKey"></param>
            <param name="offest"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringSetRangeAsync(System.String,System.Int64,System.String)">
            <summary>
            https://redis.io/commands/setrange
            </summary>
            <param name="cacheKey"></param>
            <param name="offest"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringGetRange(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/getrange
            </summary>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.StringGetRangeAsync(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/getrange
            </summary>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HMSet(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.TimeSpan})">
            <summary>
            https://redis.io/commands/hmset
            </summary>
            <param name="cacheKey"></param>
            <param name="vals"></param>
            <param name="expiration"></param>
            <returns></returns>        
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HSet(System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/hset
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HExists(System.String,System.String)">
            <summary>
            https://redis.io/commands/hexists
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HDel(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            https://redis.io/commands/hdel
            </summary>
            <param name="cacheKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HGet(System.String,System.String)">
            <summary>
            https://redis.io/commands/hget
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HGetAll(System.String)">
            <summary>
            https://redis.io/commands/hgetall
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HIncrBy(System.String,System.String,System.Int64)">
            <summary>
            https://redis.io/commands/hincrby
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HKeys(System.String)">
            <summary>
            https://redis.io/commands/hkeys
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HLen(System.String)">
            <summary>
            https://redis.io/commands/hlen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HVals(System.String)">
            <summary>
            https://redis.io/commands/hvals
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HMGet(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            https://redis.io/commands/hmget
            </summary>
            <param name="cacheKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HMSetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.TimeSpan})">
            <summary>
            https://redis.io/commands/hset
            </summary>
            <param name="cacheKey"></param>
            <param name="vals"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HSetAsync(System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/hset
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HExistsAsync(System.String,System.String)">
            <summary>
            https://redis.io/commands/hexists
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HDelAsync(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            https://redis.io/commands/hdel
            </summary>
            <param name="cacheKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HGetAsync(System.String,System.String)">
            <summary>
            https://redis.io/commands/hget
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HGetAllAsync(System.String)">
            <summary>
            https://redis.io/commands/hgetall
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HIncrByAsync(System.String,System.String,System.Int64)">
            <summary>
            https://redis.io/commands/hincrby
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HKeysAsync(System.String)">
            <summary>
            https://redis.io/commands/hkeys
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HLenAsync(System.String)">
            <summary>
            https://redis.io/commands/hlen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HValsAsync(System.String)">
            <summary>
            https://redis.io/commands/hvals
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.HMGetAsync(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            https://redis.io/commands/hmget
            </summary>
            <param name="cacheKey"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LIndex``1(System.String,System.Int64)">
            <summary>
            https://redis.io/commands/lindex
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LLen(System.String)">
            <summary>
            https://redis.io/commands/llen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPop``1(System.String)">
            <summary>
            https://redis.io/commands/lpop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPush``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/lpush
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LRange``1(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/lrange
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LRem``1(System.String,System.Int64,``0)">
            <summary>
            https://redis.io/commands/lrem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LSet``1(System.String,System.Int64,``0)">
            <summary>
            https://redis.io/commands/lset
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="index"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LTrim(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/ltrim
            </summary>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPushX``1(System.String,``0)">
            <summary>
            https://redis.io/commands/lpushx
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LInsertBefore``1(System.String,``0,``0)">
            <summary>
            https://redis.io/commands/linsert
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="pivot"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LInsertAfter``1(System.String,``0,``0)">
            <summary>
            https://redis.io/commands/linsert
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="pivot"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPushX``1(System.String,``0)">
            <summary>
            https://redis.io/commands/rpushx
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPush``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/rpush
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPop``1(System.String)">
            <summary>
            https://redis.io/commands/rpop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LIndexAsync``1(System.String,System.Int64)">
            <summary>
            https://redis.io/commands/lindex
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LLenAsync(System.String)">
            <summary>
            https://redis.io/commands/llen
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPopAsync``1(System.String)">
            <summary>
            https://redis.io/commands/lpop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPushAsync``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/lpush
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LRangeAsync``1(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/lrange
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LRemAsync``1(System.String,System.Int64,``0)">
            <summary>
            https://redis.io/commands/lrem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LSetAsync``1(System.String,System.Int64,``0)">
            <summary>
            https://redis.io/commands/lset
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="index"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LTrimAsync(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/ltrim
            </summary>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LPushXAsync``1(System.String,``0)">
            <summary>
            https://redis.io/commands/lpushx
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LInsertBeforeAsync``1(System.String,``0,``0)">
            <summary>
            https://redis.io/commands/linsert
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="pivot"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.LInsertAfterAsync``1(System.String,``0,``0)">
            <summary>
            https://redis.io/commands/linsert
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="pivot"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPushXAsync``1(System.String,``0)">
            <summary>
            https://redis.io/commands/rpushx
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPushAsync``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/rpush
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.RPopAsync``1(System.String)">
            <summary>
            https://redis.io/commands/rpop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SAdd``1(System.String,System.Collections.Generic.IList{``0},System.Nullable{System.TimeSpan})">
            <summary>
            https://redis.io/commands/sadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SCard(System.String)">
            <summary>
            https://redis.io/commands/scard
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SIsMember``1(System.String,``0)">
            <summary>
            https://redis.io/commands/sismember
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SMembers``1(System.String)">
            <summary>
            https://redis.io/commands/smembers
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SPop``1(System.String)">
            <summary>
            https://redis.io/commands/spop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SRandMember``1(System.String,System.Int32)">
            <summary>
            https://redis.io/commands/srandmember
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SRem``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/srem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SAddAsync``1(System.String,System.Collections.Generic.IList{``0},System.Nullable{System.TimeSpan})">
            <summary>
            https://redis.io/commands/sadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SCardAsync(System.String)">
            <summary>
            https://redis.io/commands/scard
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SIsMemberAsync``1(System.String,``0)">
            <summary>
            https://redis.io/commands/sismember
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SMembersAsync``1(System.String)">
            <summary>
            https://redis.io/commands/smembers
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SPopAsync``1(System.String)">
            <summary>
            https://redis.io/commands/spop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SRandMemberAsync``1(System.String,System.Int32)">
            <summary>
            https://redis.io/commands/srandmember
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.SRemAsync``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/srem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZAdd``1(System.String,System.Collections.Generic.Dictionary{``0,System.Double})">
            <summary>
            https://redis.io/commands/zadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZCard(System.String)">
            <summary>
            https://redis.io/commands/zcard
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZCount(System.String,System.Double,System.Double)">
            <summary>
            https://redis.io/commands/zcount
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZIncrBy(System.String,System.String,System.Double)">
            <summary>
            https://redis.io/commands/zincrby
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZLexCount(System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/zlexcount
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRange``1(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/zrange
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRangeByScore``1(System.String,System.Double,System.Double,System.Nullable{System.Int64},System.Int64)">
            <summary>
            https://redis.io/commands/zrangebyscore/        
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRangeRemByScore(System.String,System.Double,System.Double)">
            <summary>
            https://redis.io/commands/zremrangebyscore/     
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns>The number of elements removed</returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRank``1(System.String,``0)">
            <summary>
            https://redis.io/commands/zrank
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRem``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/zrem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZScore``1(System.String,``0)">
            <summary>
            https://redis.io/commands/zscore
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZAddAsync``1(System.String,System.Collections.Generic.Dictionary{``0,System.Double})">
            <summary>
            https://redis.io/commands/zadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZCardAsync(System.String)">
            <summary>
            https://redis.io/commands/zcard
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZCountAsync(System.String,System.Double,System.Double)">
            <summary>
            https://redis.io/commands/zcount
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZIncrByAsync(System.String,System.String,System.Double)">
            <summary>
            https://redis.io/commands/zincrby
            </summary>
            <param name="cacheKey"></param>
            <param name="field"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZLexCountAsync(System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/zlexcount
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRangeAsync``1(System.String,System.Int64,System.Int64)">
            <summary>
            https://redis.io/commands/zrange
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRangeByScoreAsync``1(System.String,System.Double,System.Double,System.Nullable{System.Int64},System.Int64)">
            <summary>
            https://redis.io/commands/zrangebyscore/        
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRangeRemByScoreAsync(System.String,System.Double,System.Double)">
            <summary>
            https://redis.io/commands/zremrangebyscore/     
            </summary>
            <param name="cacheKey"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns>The number of elements removed</returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRankAsync``1(System.String,``0)">
            <summary>
            https://redis.io/commands/zrank
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZRemAsync``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            https://redis.io/commands/zrem
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValues"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.ZScoreAsync``1(System.String,``0)">
            <summary>
            https://redis.io/commands/zscore
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfAdd``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            https://redis.io/commands/pfadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfAddAsync``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            https://redis.io/commands/pfadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfCount(System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/pfcount
            </summary>
            <param name="cacheKeys"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfCountAsync(System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/pfcount
            </summary>
            <param name="cacheKeys"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfMerge(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/pfmerge
            </summary>
            <param name="destKey"></param>
            <param name="sourceKeys"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.PfMergeAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/pfmerge
            </summary>
            <param name="destKey"></param>
            <param name="sourceKeys"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoAdd(System.String,System.Collections.Generic.List{System.ValueTuple{System.Double,System.Double,System.String}})">
            <summary>
            https://redis.io/commands/geoadd
            </summary>
            <param name="cacheKey"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoAddAsync(System.String,System.Collections.Generic.List{System.ValueTuple{System.Double,System.Double,System.String}})">
            <summary>
            https://redis.io/commands/geoadd
            </summary>
            <param name="cacheKey"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoDist(System.String,System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/geodist
            </summary>
            <param name="cacheKey"></param>
            <param name="member1"></param>
            <param name="member2"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoDistAsync(System.String,System.String,System.String,System.String)">
            <summary>
            https://redis.io/commands/geodist
            </summary>
            <param name="cacheKey"></param>
            <param name="member1"></param>
            <param name="member2"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoHash(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/geohash
            </summary>
            <param name="cacheKey"></param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoHashAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/geohash
            </summary>
            <param name="cacheKey"></param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoPos(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/geopos
            </summary>
            <param name="cacheKey"></param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:EasyCaching.Core.IRedisCachingProvider.GeoPosAsync(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            https://redis.io/commands/geopos
            </summary>
            <param name="cacheKey"></param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="T:EasyCaching.Core.DefaultEasyCachingProviderFactory">
            <summary>
            Default easycaching provider factory.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.DefaultHybridProviderFactory">
            <summary>
            Default easycaching hybrid provider factory.
            </summary>
        </member>
        <member name="T:EasyCaching.Core.IEasyCachingProviderFactory">
            <summary>
            EasyCaching provider factory.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderFactory.GetCachingProvider(System.String)">
            <summary>
            Gets the caching provider.
            </summary>
            <returns>The caching provider.</returns>
            <param name="name">Name.</param>
        </member>
        <member name="M:EasyCaching.Core.IEasyCachingProviderFactory.GetRedisProvider(System.String)">
            <summary>
            Gets the redis provider.
            </summary>
            <returns>The redis provider.</returns>
            <param name="name">Name.</param>
        </member>
        <member name="M:EasyCaching.Core.IHybridProviderFactory.GetHybridCachingProvider(System.String)">
            <summary>
            Gets the hybrid provider.
            </summary>
            <returns>The hybrid provider.</returns>
            <param name="name">Name.</param>        
        </member>
        <member name="T:EasyCaching.Core.Serialization.IEasyCachingSerializer">
            <summary>
            Easy caching serializer.
            </summary>
        </member>
        <member name="P:EasyCaching.Core.Serialization.IEasyCachingSerializer.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:EasyCaching.Core.Serialization.IEasyCachingSerializer.Serialize``1(``0)">
            <summary>
            Serialize the specified value.
            </summary>
            <returns>The serialize.</returns>
            <param name="value">Value.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.Serialization.IEasyCachingSerializer.Deserialize``1(System.Byte[])">
            <summary>
            Deserialize the specified bytes.
            </summary>
            <returns>The deserialize.</returns>
            <param name="bytes">Bytes.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:EasyCaching.Core.Serialization.IEasyCachingSerializer.Deserialize(System.Byte[],System.Type)">
            <summary>
            Deserialize the specified bytes.
            </summary>
            <returns>The deserialize.</returns>
            <param name="bytes">Bytes.</param>
            <param name="type">Type.</param>
        </member>
        <member name="M:EasyCaching.Core.Serialization.IEasyCachingSerializer.SerializeObject(System.Object)">
            <summary>
            Serializes the object.
            </summary>
            <returns>The object.</returns>
            <param name="obj">Object.</param>
        </member>
        <member name="M:EasyCaching.Core.Serialization.IEasyCachingSerializer.DeserializeObject(System.ArraySegment{System.Byte})">
            <summary>
            Deserializes the object.
            </summary>
            <returns>The object.</returns>
            <param name="value">Value.</param>
        </member>
        <member name="T:EasyCaching.Core.CacheStats">
            <summary>
            Cache stats.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.CacheStats._counters">
            <summary>
            The counters.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.CacheStats.DEFAULT_KEY">
            <summary>
            The default key.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheStats.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EasyCaching.Core.CacheStats"/> class.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheStats.OnHit">
            <summary>
            Ons the hit.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheStats.OnMiss">
            <summary>
            Ons the miss.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheStats.GetStatistic(EasyCaching.Core.StatsType)">
            <summary>
            Gets the statistic.
            </summary>
            <returns>The statistic.</returns>
            <param name="statsType">Stats type.</param>
        </member>
        <member name="M:EasyCaching.Core.CacheStats.GetCounter">
            <summary>
            Gets the counter.
            </summary>
            <returns>The counter.</returns>
        </member>
        <member name="T:EasyCaching.Core.CacheStatsCounter">
            <summary>
            Cache stats counter.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.CacheStatsCounter._counters">
            <summary>
            The counters.
            </summary>
        </member>
        <member name="M:EasyCaching.Core.CacheStatsCounter.Increment(EasyCaching.Core.StatsType)">
            <summary>
            Increment the specified statsType.
            </summary>
            <param name="statsType">Stats type.</param>
        </member>
        <member name="M:EasyCaching.Core.CacheStatsCounter.Get(EasyCaching.Core.StatsType)">
            <summary>
            Get the specified statsType.
            </summary>
            <returns>The get.</returns>
            <param name="statsType">Stats type.</param>
        </member>
        <member name="T:EasyCaching.Core.StatsType">
            <summary>
            Stats type.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.StatsType.Hit">
            <summary>
            The hit.
            </summary>
        </member>
        <member name="F:EasyCaching.Core.StatsType.Missed">
            <summary>
            The missed.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.EasyCachingServiceCollectionExtensions">
            <summary>
            EasyCaching service collection extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EasyCachingServiceCollectionExtensions.AddEasyCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{EasyCaching.Core.Configurations.EasyCachingOptions})">
            <summary>
            Adds the EasyCaching.
            </summary>
            <returns>The easy caching.</returns>
            <param name="services">Services.</param>
            <param name="setupAction">Setup action.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EasyCachingServiceCollectionExtensions.AddEasyCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,EasyCaching.Core.Configurations.EasyCachingOptions})">
            <summary>
            Adds the EasyCaching.
            </summary>
            <returns>The easy caching.</returns>
            <param name="services">Services.</param>
            <param name="setupAction">Setup action.</param>
        </member>
    </members>
</doc>
